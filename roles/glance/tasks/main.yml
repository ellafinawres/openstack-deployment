---
# Installer les paquets Glance et dépendances
- name: Installer paquets Glance et python3-pymysql
  apt:
    name:
      - glance
      - python3-pymysql
      - python3-boto3
    state: present
    update_cache: yes
  become: yes

# Créer la base Glance
- name: Créer base Glance
  mysql_db:
    name: glance
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
  become: yes

# Créer les utilisateurs MySQL pour Glance
- name: Créer utilisateur MySQL Glance @localhost
  mysql_user:
    name: glance
    password: "{{ glance_db_password }}"
    priv: "glance.*:ALL"
    host: "localhost"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
  become: yes

- name: Créer utilisateur MySQL Glance @'%'
  mysql_user:
    name: glance
    password: "{{ glance_db_password }}"
    priv: "glance.*:ALL"
    host: "%"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
  become: yes

# Créer l'utilisateur Glance dans Keystone
- name: Créer l'utilisateur Glance dans Keystone
  openstack.cloud.identity_user:
    auth: "{{ os_auth }}"
    name: glance
    password: "{{ glance_user_password }}"
    default_project: service
    domain: default
    state: present

# Assurer que l'utilisateur glance a le rôle admin sur le projet service
- name: Assurer que l'utilisateur glance a le rôle admin sur le projet service
  openstack.cloud.role_assignment:
    auth: "{{ os_auth }}"
    user: glance
    project: service
    role: admin
    state: present

# Créer le service Glance et endpoints
- name: Créer le service Glance
  openstack.cloud.catalog_service:
    auth: "{{ os_auth }}"
    name: glance
    type: image
    description: "OpenStack Image"
    state: present

- name: Créer endpoints Glance
  openstack.cloud.endpoint:
    auth: "{{ os_auth }}"
    service: glance
    region: "{{ glance_region }}"
    endpoint_interface: "{{ item.interface }}"
    url: "http://{{ controller_hostname }}:9292"
    state: present
  loop:
    - { interface: public }
    - { interface: internal }
    - { interface: admin }

# Copier le fichier de configuration glance-api.conf
- name: Copier fichier de configuration glance-api.conf
  template:
    src: glance-api.conf.j2
    dest: /etc/glance/glance-api.conf
    owner: root
    group: root
    mode: '0644'
  become: yes

# Créer le répertoire de stockage pour Glance
- name: Créer répertoire de stockage pour Glance
  file:
    path: "{{ glance_filesystem_store }}"
    state: directory
    owner: glance
    group: glance
    mode: '0755'
  become: yes

# Synchroniser la base Glance avec retries
- name: Synchroniser la base Glance
  command: su -s /bin/sh -c "glance-manage db_sync" glance
  register: db_sync_result
  until: db_sync_result.rc == 0
  retries: 5
  delay: 10
  become: yes

# Redémarrer le service Glance
- name: Redémarrer le service Glance
  service:
    name: glance-api
    state: restarted
    enabled: yes
  become: yes

# Télécharger l'image CirrOS
- name: Télécharger l'image CirrOS
  get_url:
    url: http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img
    dest: /tmp/cirros-0.4.0-x86_64-disk.img
    mode: '0644'
  become: yes

# Définir le propriétaire de l'image CirrOS
- name: Définir le propriétaire de l'image CirrOS
  file:
    path: /tmp/cirros-0.4.0-x86_64-disk.img
    owner: glance
    group: glance
    mode: '0644'
  become: yes

# Importer l'image CirrOS dans Glance
- name: Importer l'image CirrOS dans Glance
  openstack.cloud.image:
    auth: "{{ os_auth }}"
    name: cirros
    filename: /tmp/cirros-0.4.0-x86_64-disk.img
    disk_format: qcow2
    container_format: bare
    visibility: public
  environment:
    OS_AUTH_URL: "{{ os_auth.auth_url }}"
    OS_USERNAME: "{{ os_auth.username }}"
    OS_PASSWORD: "{{ os_auth.password }}"
    OS_PROJECT_NAME: "{{ os_auth.project_name }}"
    OS_USER_DOMAIN_NAME: "{{ os_auth.user_domain_name }}"
    OS_PROJECT_DOMAIN_NAME: "{{ os_auth.project_domain_name }}"
  become: yes
